View(output_2b)
#descendants(df$referencedComponentId)
output_two_desc$relationship <- 'Descendant'
output_two_desc$relationship[which(output_two$ICD10_code %in% output_two_desc$icd10_code )] <- 'Concept'
output_2b <- output_two_desc
write.csv(output_2b, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output2b.csv")
View(missing_in_extendedmap)
View(ExtendedMapFull)
#remove X from icd10
gastro_one$icd10 <- gsub("X","",as.character(gastro_one$icd10))
#finding icd10 in extended map to find referenceid
searched_df <- Map_with_terms %>% filter(mapTarget %in% gastro_one$icd10)
colnames(searched_df) <- c("referencedComponentId", "mapTarget", "ExtendedMapTerm")
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#output1:
#less phecodes than in hep(?) -could be phecodes/icd10 codes missing in the map with terms
length(unique(output_one$referencedComponentId))
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#PART 1 -OUTPUT ONE
gastro_one <- gastro
gastro_one <- gastro_one %>% select(icd10, phecode, phenotype)
#remove X from icd10
gastro_one$icd10 <- gsub("X","",as.character(gastro_one$icd10))
#finding icd10 in extended map to find referenceid
searched_df <- Map_with_terms %>% filter(mapTarget %in% gastro_one$icd10)
colnames(searched_df) <- c("referencedComponentId", "mapTarget", "ExtendedMapTerm")
#remove (disorder)
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
source("D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/phe.R")
require(Rdiagnosislist)
library(readr)
library(tidyverse)
library(dplyr)
library(stringr)
#load dataset #setWD
#setwd("./OneDrive_1_11-9-2022/")
phe_speciality <- read_csv("./phe_speciality.csv")
phe_map <- read_csv("./phe_map.csv")
phe_dictionary <- read_csv("./phe_dictionary.csv")
ExtendedMapFull <- read_table("./der2_iisssccRefset_ExtendedMapFull_INT_20220731.txt")
#remove decimals/dots in extended map file
ExtendedMapFull$mapTarget <-  gsub('\\.', '', as.character(ExtendedMapFull$mapTarget))
Description_map <- read.table("./sct2_Description_Full-en_INT_20220731.txt", sep = "\t", fill = TRUE, comment.char="",
quote = "\"",header = TRUE, as.is = T, strip.white = T)
Map_with_terms <- full_join(ExtendedMapFull, Description_map, by = c("referencedComponentId" = "conceptId"))
Map_with_terms <- Map_with_terms %>% select(referencedComponentId, mapTarget, term) %>% distinct()
#load snomed codes
SNOMED <- loadSNOMED(c(
'./SnomedCT_InternationalRF2_PRODUCTION_20220731T120000Z/',
'./SnomedCT_UKClinicalRF2_PRODUCTION_20210317T000001Z/'))
#merge phe map and dictionary
phe_map_and_dictionary <- left_join(phe_map, phe_dictionary)
#filter gastroenterology & hepatology
#filter disease
gastro <-  phe_map_and_dictionary %>% filter(spec_01 == 'Gastroenterology') %>% filter(subspec_01 == 'Hepatology') %>%
filter(type == 'Disease')
#PART 1 -OUTPUT ONE
gastro_one <- gastro
gastro_one <- gastro_one %>% select(icd10, phecode, phenotype)
#remove X from icd10
gastro_one$icd10 <- gsub("X","",as.character(gastro_one$icd10))
#finding icd10 in extended map to find referenceid
searched_df <- Map_with_terms %>% filter(mapTarget %in% gastro_one$icd10)
colnames(searched_df) <- c("referencedComponentId", "mapTarget", "ExtendedMapTerm")
#remove (disorder)
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#remove (disorder)
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one$referencedComponentId <- as.integer(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
output_one_codelist = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId), include_desc = TRUE)
output_one_desc = getMaps(output_one_codelist, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
#join with descendants
output_one_desc$relationship <- 'Descendants'
output_one_desc$relationship[which(output_one_desc$icd10_code  %in% output_one$icd10 )] <- 'Concept'
output_1b <- left_join(output_one, output_one_desc, by = c('referencedComponentId' = 'conceptId'))
output_1b <- output_1b%>% arrange(., referencedComponentId)
View(output_1b)
write.csv(output_1b, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1b.csv")
output_one$referencedComponentId <- as.integer(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
codelist_one = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId))
codelist_one= getMaps(codelist_one, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
#write.csv(codelist_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/codelist_one.csv")
#codelist_one$conceptId <- as.character(codelist_one$conceptId)
output_one <- output_one %>% select(-ExtendedMapTerm, -phenotype)
colnames(codelist_one) <- c("conceptId", "ICD10_code", "SNOMEDTerm")
output_two <- left_join(output_one, codelist_one, by = c('referencedComponentId' = 'conceptId')) %>% distinct()
View(output_two)
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
missing_in_extendedmap
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
output_one[is.na(output_one$referencedComponentId), ]
#remove (disorder)
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
View(missing_in_extendedmap)
gastro_one <- gastro
gastro_one <- gastro_one %>% select(icd10, phecode, phenotype)
#remove X from icd10
gastro_one$icd10 <- gsub("X","",as.character(gastro_one$icd10))
#finding icd10 in extended map to find referenceid
searched_df <- Map_with_terms %>% filter(mapTarget %in% gastro_one$icd10)
colnames(searched_df) <- c("referencedComponentId", "mapTarget", "ExtendedMapTerm")
#remove (disorder)
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
require(Rdiagnosislist)
library(readr)
library(tidyverse)
library(dplyr)
library(stringr)
#load dataset #setWD
#setwd("./OneDrive_1_11-9-2022/")
phe_speciality <- read_csv("./phe_speciality.csv")
phe_map <- read_csv("./phe_map.csv")
phe_dictionary <- read_csv("./phe_dictionary.csv")
ExtendedMapFull <- read_table("./der2_iisssccRefset_ExtendedMapFull_INT_20220731.txt")
#remove decimals/dots in extended map file
ExtendedMapFull$mapTarget <-  gsub('\\.', '', as.character(ExtendedMapFull$mapTarget))
Description_map <- read.table("./sct2_Description_Full-en_INT_20220731.txt", sep = "\t", fill = TRUE, comment.char="",
quote = "\"",header = TRUE, as.is = T, strip.white = T)
Map_with_terms <- full_join(ExtendedMapFull, Description_map, by = c("referencedComponentId" = "conceptId"))
Map_with_terms <- Map_with_terms %>% select(referencedComponentId, mapTarget, term) %>% distinct()
#load snomed codes
SNOMED <- loadSNOMED(c(
'./SnomedCT_InternationalRF2_PRODUCTION_20220731T120000Z/',
'./SnomedCT_UKClinicalRF2_PRODUCTION_20210317T000001Z/'))
#merge phe map and dictionary
phe_map_and_dictionary <- left_join(phe_map, phe_dictionary)
#filter gastroenterology & hepatology
#filter disease
gastro <-  phe_map_and_dictionary %>% filter(spec_01 == 'Gastroenterology') %>% filter(subspec_01 == 'Hepatology') %>%
filter(type == 'Disease')
#PART 1 -OUTPUT ONE
gastro_one <- gastro
gastro_one <- gastro_one %>% select(icd10, phecode, phenotype)
View(gastro_one)
#remove X from icd10
gastro_one$icd10 <- gsub("X","",as.character(gastro_one$icd10))
#finding icd10 in extended map to find referenceid
searched_df <- Map_with_terms %>% filter(mapTarget %in% gastro_one$icd10)
View(searched_df)
colnames(searched_df) <- c("referencedComponentId", "mapTarget", "ExtendedMapTerm")
#remove (disorder)
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
View(output_one)
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
View(missing_in_extendedmap)
write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one$referencedComponentId <- as.integer(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
output_one_codelist = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId), include_desc = TRUE)
output_one_desc = getMaps(output_one_codelist, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
#join with descendants
output_one_desc$relationship <- 'Descendants'
output_one_desc$relationship[which(output_one_desc$icd10_code  %in% output_one$icd10 )] <- 'Concept'
output_1b <- left_join(output_one, output_one_desc, by = c('referencedComponentId' = 'conceptId'))
output_1b <- output_1b%>% arrange(., referencedComponentId)
#wr
View(output_1b)
write.csv(output_1b, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1b.csv")
output_one$referencedComponentId <- as.integer(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
codelist_one = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId))
codelist_one= getMaps(codelist_one, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
output_one <- output_one %>% select(-ExtendedMapTerm, -phenotype)
colnames(codelist_one) <- c("conceptId", "ICD10_code", "SNOMEDTerm")
output_two <- left_join(output_one, codelist_one, by = c('referencedComponentId' = 'conceptId')) %>% distinct()
#write.csv(output_two, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output2.csv")
View(output_two)
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
output_one$referencedComponentId <- as.integer(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
codelist_one = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId))
codelist_one= getMaps(codelist_one, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
#write.csv(codelist_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/codelist_one.csv")
#codelist_one$conceptId <- as.character(codelist_one$conceptId)
colnames(codelist_one) <- c("conceptId", "ICD10_code", "SNOMEDTerm")
View(codelist_one)
output_two <- left_join(output_one, codelist_one, by = c('referencedComponentId' = 'conceptId')) %>% distinct()
write.csv(output_two, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output2.csv")
output_two_desc$relationship <- 'Descendant'
output_two$referencedComponentId <- as.integer(output_two$referencedComponentId)
for (i in 1:length(output_two)) { #x =1
output_two_codelist = SNOMEDcodelist(SNOMEDconcept(output_two$referencedComponentId), include_desc = TRUE)
output_two_desc = getMaps(output_two_codelist, to = c('icd10'), single_row_per_concept = FALSE)
}
output_two_desc$relationship <- 'Descendant'
output_two_desc$relationship[which(output_two$ICD10_code %in% output_two_desc$icd10_code )] <- 'Concept'
output_2b <- output_two_desc
View(output_2b)
write.csv(output_2b, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output2b.csv")
#length of phecodes
length(unique(gastro_one$phecode))
length(unique(gastro_one$icd10))
#output1:
#less phecodes than in hep(?) -could be phecodes/icd10 codes missing in the map with terms
length(unique(output_one$referencedComponentId))
length(unique(output_two$referencedComponentId))
length(unique(output_one_desc$conceptId))
length(unique(output_2b$icd10))
length(unique(output_2b$icd10_code))
length(unique(output_2b$ICD10_code))
require(Rdiagnosislist)
library(readr)
library(tidyverse)
library(dplyr)
library(stringr)
#load dataset #setWD
#setwd("./OneDrive_1_11-9-2022/")
phe_speciality <- read_csv("./phe_speciality.csv")
setwd("./OneDrive_1_11-9-2022/")
setwd("D:/HDR UK/IHI/OneDrive_1_11-9-2022")
phe_speciality <- read_csv("./phe_speciality.csv")
phe_map <- read_csv("./phe_map.csv")
phe_dictionary <- read_csv("./phe_dictionary.csv")
ExtendedMapFull <- read_table("./der2_iisssccRefset_ExtendedMapFull_INT_20220731.txt")
#remove decimals/dots in extended map file
ExtendedMapFull$mapTarget <-  gsub('\\.', '', as.character(ExtendedMapFull$mapTarget))
Description_map <- read.table("./sct2_Description_Full-en_INT_20220731.txt", sep = "\t", fill = TRUE, comment.char="",
quote = "\"",header = TRUE, as.is = T, strip.white = T)
Map_with_terms <- full_join(ExtendedMapFull, Description_map, by = c("referencedComponentId" = "conceptId"))
Map_with_terms <- Map_with_terms %>% select(referencedComponentId, mapTarget, term) %>% distinct()
#load snomed codes
SNOMED <- loadSNOMED(c(
'./SnomedCT_InternationalRF2_PRODUCTION_20220731T120000Z/',
'./SnomedCT_UKClinicalRF2_PRODUCTION_20210317T000001Z/'))
#merge phe map and dictionary
phe_map_and_dictionary <- left_join(phe_map, phe_dictionary)
gastro <-  phe_map_and_dictionary %>% filter(spec_01 == 'Gastroenterology') %>% filter(subspec_01 == 'Hepatology') %>%
filter(type == 'Disease')
#PART 1 -OUTPUT ONE
gastro_one <- gastro
gastro_one <- gastro_one %>% select(icd10, phecode, phenotype)
#remove X from icd10
gastro_one$icd10 <- gsub("X","",as.character(gastro_one$icd10))
#finding icd10 in extended map to find referenceid
searched_df <- Map_with_terms %>% filter(mapTarget %in% gastro_one$icd10)
colnames(searched_df) <- c("referencedComponentId", "mapTarget", "ExtendedMapTerm")
#remove (disorder)
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#add descendants
output_one$referencedComponentId <- as.integer(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
output_one_codelist = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId), include_desc = TRUE)
output_one_desc = getMaps(output_one_codelist, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
#join with descendants
output_one_desc$relationship <- 'Descendants'
output_one_desc$relationship[which(output_one_desc$icd10_code  %in% output_one$icd10 )] <- 'Concept'
output_1b <- left_join(output_one, output_one_desc, by = c('referencedComponentId' = 'conceptId'))
output_1b <- output_1b%>% arrange(., referencedComponentId)
#write.csv(output_1b, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1b.csv")
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#add descendants
output_one$referencedComponentId <- as.integer(output_one$referencedComponentId)
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#add descendants
#output_one$referencedComponentId <- as.integer(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
output_one_codelist = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId), include_desc = TRUE)
output_one_desc = getMaps(output_one_codelist, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
#add descendants
output_one$referencedComponentId <- as.character.numeric_version(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
output_one_codelist = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId), include_desc = TRUE)
output_one_desc = getMaps(output_one_codelist, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#add descendants
output_one$referencedComponentId <- as.character(as.integer(output_one$referencedComponentId))
library(bit64)
#add descendants
output_one$referencedComponentId <- as.integer64(as.integer(output_one$referencedComponentId))
for (i in 1:length(output_one)) { #x =1
output_one_codelist = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId), include_desc = TRUE)
output_one_desc = getMaps(output_one_codelist, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#add descendants
output_one$referencedComponentId <- as.integer64(as.integer(output_one$referencedComponentId))
for (i in 1:length(output_one)) { #x =1
output_one_codelist = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId), include_desc = TRUE)
output_one_desc = getMaps(output_one_codelist, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#add descendants
output_one$referencedComponentId <- as.integer64(as.integer(output_one$referencedComponentId))
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
#add descendants
output_one$referencedComponentId <- as.integer64.character(as.integer(output_one$referencedComponentId))
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#add descendants
output_one$referencedComponentId <- as.integer64(output_one$referencedComponentId)
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#add descendants
output_one$referencedComponentId <- as.integer64(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
output_one_codelist = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId), include_desc = TRUE)
output_one_desc = getMaps(output_one_codelist, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
#join with descendants
output_one_desc$relationship <- 'Descendants'
output_one_desc$relationship[which(output_one_desc$icd10_code  %in% output_one$icd10 )] <- 'Concept'
output_1b <- left_join(output_one, output_one_desc, by = c('referencedComponentId' = 'conceptId'))
output_1b <- output_1b%>% arrange(., referencedComponentId)
#write.csv(output_1b, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1b.csv")
for (i in 1:length(output_one)) { #x =1
codelist_one = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId))
codelist_one= getMaps(codelist_one, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
colnames(codelist_one) <- c("conceptId", "ICD10_code", "SNOMEDTerm")
output_two <- left_join(output_one, codelist_one, by = c('referencedComponentId' = 'conceptId')) %>% distinct()
#write.csv(output_two, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output2.csv")
#add descendants -similar to ouput one desc
output_two$referencedComponentId <- as.integer(output_two$referencedComponentId)
for (i in 1:length(output_two)) { #x =1
output_two_codelist = SNOMEDcodelist(SNOMEDconcept(output_two$referencedComponentId), include_desc = TRUE)
output_two_desc = getMaps(output_two_codelist, to = c('icd10'), single_row_per_concept = FALSE)
}
#descendants(df$referencedComponentId)
output_two_desc$relationship <- 'Descendant'
output_two_desc$relationship[which(output_two$ICD10_code %in% output_two_desc$icd10_code )] <- 'Concept'
output_2b <- output_two_desc
write.csv(output_2b, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output2b.csv")
View(output_two)
#output1:
length(unique(output_one$referencedComponentId))
length(unique(output_two$referencedComponentId))
source("D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/phe.R")
#load dataset #setWD
#setwd("./OneDrive_1_11-9-2022/")
phe_speciality <- read_csv("./phe_speciality.csv")
phe_map <- read_csv("./phe_map.csv")
phe_dictionary <- read_csv("./phe_dictionary.csv")
ExtendedMapFull <- read_table("./der2_iisssccRefset_ExtendedMapFull_INT_20220731.txt")
#remove decimals/dots in extended map file
ExtendedMapFull$mapTarget <-  gsub('\\.', '', as.character(ExtendedMapFull$mapTarget))
Description_map <- read.table("./sct2_Description_Full-en_INT_20220731.txt", sep = "\t", fill = TRUE, comment.char="",
quote = "\"",header = TRUE, as.is = T, strip.white = T)
Map_with_terms <- full_join(ExtendedMapFull, Description_map, by = c("referencedComponentId" = "conceptId"))
Map_with_terms <- Map_with_terms %>% select(referencedComponentId, mapTarget, term) %>% distinct()
#load snomed codes
SNOMED <- loadSNOMED(c(
'./SnomedCT_InternationalRF2_PRODUCTION_20220731T120000Z/',
'./SnomedCT_UKClinicalRF2_PRODUCTION_20210317T000001Z/'))
#merge phe map and dictionary
phe_map_and_dictionary <- left_join(phe_map, phe_dictionary)
#filter gastroenterology & hepatology
#filter disease
gastro <-  phe_map_and_dictionary %>% filter(spec_01 == 'Gastroenterology') %>% filter(subspec_01 == 'Hepatology') %>%
filter(type == 'Disease')
gastro_one <- gastro
gastro_one <- gastro_one %>% select(icd10, phecode, phenotype)
#remove X from icd10
gastro_one$icd10 <- gsub("X","",as.character(gastro_one$icd10))
#finding icd10 in extended map to find referenceid
searched_df <- Map_with_terms %>% filter(mapTarget %in% gastro_one$icd10)
colnames(searched_df) <- c("referencedComponentId", "mapTarget", "ExtendedMapTerm")
#remove (disorder)
searched_df$ExtendedMapTerm <-  str_replace(searched_df$ExtendedMapTerm, " \\s*\\([^\\)]+\\)", "")
searched_df <- searched_df %>% distinct()
output_one <- left_join(gastro_one, searched_df, by = c('icd10' = 'mapTarget')) %>% distinct()
#missing icd10
missing_in_extendedmap <- output_one[is.na(output_one$referencedComponentId), ]
#write.csv(missing_in_extendedmap, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Missing ICD 10.csv")
output_one <- output_one[!is.na(output_one$referencedComponentId), ] #remove NA snomed codes
#write.csv(output_one, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1.csv")
#add descendants
output_one$referencedComponentId <- as.integer64(output_one$referencedComponentId)
for (i in 1:length(output_one)) { #x =1
output_one_codelist = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId), include_desc = TRUE)
output_one_desc = getMaps(output_one_codelist, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
output_one_desc$relationship <- 'Descendants'
output_one_desc$relationship[which(output_one_desc$icd10_code  %in% output_one$icd10 )] <- 'Concept'
output_1b <- left_join(output_one, output_one_desc, by = c('referencedComponentId' = 'conceptId'))
output_1b <- output_1b%>% arrange(., referencedComponentId)
#write.csv(output_1b, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output1b.csv")
for (i in 1:length(output_one)) { #x =1
codelist_one = SNOMEDcodelist(SNOMEDconcept(output_one$referencedComponentId))
codelist_one= getMaps(codelist_one, to = c('icd10'), single_row_per_concept = FALSE) #one to one mapping
}
colnames(codelist_one) <- c("conceptId", "ICD10_code", "SNOMEDTerm")
output_two <- left_join(output_one, codelist_one, by = c('referencedComponentId' = 'conceptId')) %>% distinct()
#write.csv(output_two, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output2.csv")
output_two$referencedComponentId <- as.integer64(output_two$referencedComponentId)
for (i in 1:length(output_two)) { #x =1
output_two_codelist = SNOMEDcodelist(SNOMEDconcept(output_two$referencedComponentId), include_desc = TRUE)
output_two_desc = getMaps(output_two_codelist, to = c('icd10'), single_row_per_concept = FALSE)
}
descendants(df$referencedComponentId)
output_two_desc$relationship <- 'Descendant'
output_two_desc$relationship[which(output_two$ICD10_code %in% output_two_desc$icd10_code )] <- 'Concept'
output_2b <- output_two_desc
#write.csv(output_2b, "D:/HDR UK/IHI/OneDrive_1_11-9-2022/IHI/Output2b.csv")
#output1:
length(unique(output_one$referencedComponentId))
length(unique(output_two$referencedComponentId))
length(unique(output_one_desc$conceptId))
length(unique(output_2b$icd10))
length(unique(output_2b$icd10_code))
length(unique(output_1b$conceptId))
length(unique(output_1b$referencedComponentId))
